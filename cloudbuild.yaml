steps:
  # ------ Build & Push Backend ------
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Backend Image'
    args: [ 'build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/backend:$COMMIT_SHA', './backend' ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Backend Image'
    args: [ 'push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/backend:$COMMIT_SHA' ]

  # 1. Iniciar el Cloud SQL Proxy en segundo plano
  - name: 'gcr.io/cloud-sql-connectors/cloud-sql-proxy'
    id: 'Start Cloud SQL Proxy'
    args:
      - '${PROJECT_ID}:${_REGION}:desafio-db-instance'

  # 2. Ejecutar la migración, conectándose al proxy en localhost
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Run DB Migration'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      # Esperar un par de segundos para que el proxy esté listo
      sleep 5
      apt-get update && apt-get install -y postgresql-client
      DB_SECRET_PASS=$$(gcloud secrets versions access latest --secret=db-password)
      # Conectarse a localhost (127.0.0.1), que es donde el proxy está escuchando
      PGPASSWORD=$$DB_SECRET_PASS psql -h 127.0.0.1 -U app-user -d app-db -f backend/migrations/01-init.sql
    waitFor: ['Start Cloud SQL Proxy']

  # ------ Deploy Backend ------
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Backend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'backend-service'
      - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/backend:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--service-account=${_RUN_SA_EMAIL}'
      - '--add-cloudsql-instances=${PROJECT_ID}:${_REGION}:desafio-db-instance'
      - '--set-env-vars=DB_USER=app-user,DB_NAME=app-db'
      - '--set-secrets=DB_PASS=db-password:latest'

  # ------ Frontend CI/CD ------
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Frontend Image'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/frontend:$COMMIT_SHA'
      - './frontend'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Frontend Image'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/frontend:$COMMIT_SHA'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Frontend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'frontend-service'
      - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/frontend:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=_VITE_API_URL=${_VITE_API_URL}'

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/backend:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/frontend:$COMMIT_SHA'

substitutions:
  _REGION: 'us-central1'
  _REPO_NAME: 'desafio-apps'
  _RUN_SA_EMAIL: 'cloud-run-runtime-sa@desafio-queplan.iam.gserviceaccount.com'
  _DB_HOST: '10.78.0.5'

options:
  logging: CLOUD_LOGGING_ONLY